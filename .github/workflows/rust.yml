name: Rust

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  docker-build:
    needs: test-build
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push app-service
        uses: docker/build-push-action@v6
        with:
          context: ./app-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/app-service:latest
      - name: Build and push auth-service
        uses: docker/build-push-action@v6
        with:
          context: ./auth-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/auth-service:latest


  deploy:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: Log in Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy compose.yml to droplet
      run: sshpass -v -p '${{ secrets.DROPLET_PASSWORD }}' scp -o StrictHostKeyChecking=no compose.yml root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          export AUTH_SERVICE_IP=${{ vars.DROPLET_IP }}
          docker compose down
          docker compose pull
          docker compose up -d
